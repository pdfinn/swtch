package main

import (
	"exp/draw"
	"image"
	"image/png"
	"log"
	"os"
)

func main() {
	f, err := os.Open("gopher.png")
	if err != nil {
		log.Fatal(err)
	}
	m, _, err := image.Decode(f)
	if err != nil {
		log.Fatal(err)
	}
	m1 := rgba(m)
	reverse(m1, 13, 11, 22+1, 16+1)
	reverse(m1, 24, 11, 34+1, 16+1)
	ff, err := os.Create("gopher1.png")
	if err != nil {
		log.Fatal(err)
	}
	if err := png.Encode(ff, m1); err != nil {
		log.Fatal(err)
	}
}

func rgba(m image.Image) *image.RGBA {
	if r, ok := m.(*image.RGBA); ok {
		return r
	}
	b := m.Bounds()
	r := image.NewRGBA(b.Dx(), b.Dy())
	draw.Draw(r, r.Bounds(), m, m.Bounds().Min)
	return r
}

func reverse(m *image.RGBA, x0, y0, x1, y1 int) {
	for y := y0; y < y1; y++ {
		for x2, x3 := x0, x1-1; x2<x3; x2, x3=x2+1, x3-1 {
			p := m.At(x2, y)
			q := m.At(x3, y)
			m.Set(x2, y, q)
			m.Set(x3, y, p)
		}
	}
}
